/**
 * Template file with jenkins configuration
**/

GITLAB_HOST = 'gitlab.example.com'

modules {
  // Credentials configuration
  credentials {
    git_jenkins {
      id = "git_${GITLAB_HOST}"
      type = "ssh"
      user_id = "git"
      description = "Default ssh key for the jenkins gitlab user"
      key = "${secrets.id_rsa.server["${GITLAB_HOST}"]}"
    }
    git_default = git_jenkins
    ssh_chef {
      id = "ssh_someuser"
      type = "ssh"
      user_id = "someuser"
      description = "Default ssh key for the someuser"
      key = "${secrets.id_rsa.user.someuser}"
    }
    ssh_default = ssh_chef
    file_someuser_key {
      id = 'file_someuser_key'
      type = 'file'
      description = 'File with id_rsa for someuser'
      file_name = 'someuser.id_rsa'
      context = "${secrets.id_rsa.user.someuser}"
    }
    kubernetes_jenkins {
      id = "kubernetes_jenkins"
      type = "password"
      user_id = "admin"
      description = "Password for the jenkins kubernetes cluster"
      password = "${secrets.password.kubernetes.jenkins}"
    }
    gitlab_api {
      id = "gitlab_api"
      type = "gitlab_api_token"
      description = "GitLab API token"
      token = "${secrets.password.gitlab}"
    }
  }

  // GitLab configuration
  gitlab {
    name = 'gitlab.example.com'
    url = "https://${GITLAB_HOST}"
    credentials_id = "${credentials.gitlab_api.id}"
  }

  // Global config
  global {
    num_executors_on_master = 0
    jenkins_root_url = "https://jenkins.example.com/"
    jenkins_admin_email = "jenkins@example.com"
    scm_quiet_period = 3
    scm_checkout_retry_count = 3
    git {
      name = "jenkins"
      email = "jenkins@example.com"
    }
    variables {
      TRUSTED_SUPERMARKET = 'https://supermarket.example.com'
      GIT_SERVER_URL = "${gitlab.url}"
    }
    smtp {
      port = 25
      host = "mail.example.com"
      reply_to_address = "no-reply.jenkins@example.com"
    }
  }

  // Jenkins Pipeline Libraries
  pipeline_libraries {
    default { // Production library
        name = "Master"
        version = "master"
        implicitly = false
        allow_overridden = false
        scm_path = "${GITLAB_HOST}:jenkins/pipeline_libraries.git"
        credentials_id = "${credentials.git_default.id}"
    }
    testing { // Library for testing feature branches
        name = "Testing"
        version = ""
        implicitly = false
        allow_overridden = true
        scm_path = "${GITLAB_HOST}:jenkins/pipeline_libraries.git"
        credentials_id = "${credentials.git_default.id}"
    }
  }

  // LDAP Configuration
  ldap {
    server = 'ldap://ldap.example.com'
    root_dn = 'dc=example,dc=com'
    user_search_base = ""
    user_search = 'sAMAccountName={0}'
    group_search_base =
    manager_dn = 'cn=reader,ou=VirtualUsers,dc=example,dc=com'
    manager_password = "${secrets.password.ldap}"
    inhibit_infer_root_dn = false
  }
}
